# ===========================================
# בוט טלגרם למעקב מלאי - משתני סביבה
# העתיקו קובץ זה ל-.env ומלאו את הערכים האמיתיים שלכם
# ===========================================

# ===========================================
# 🤖 הגדרות הבוט בטלגרם
# ===========================================

# קבלו מ-@BotFather בטלגרם
TELEGRAM_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz

# כתובת ה-Webhook (לפריסה בענן ב-Render)
# פורמט: https://your-app.onrender.com
WEBHOOK_URL=https://stock-tracker-bot.onrender.com

# פורט לשרת הווב (Render משתמש ב-10000 כברירת מחדל)
PORT=10000

# ===========================================
# 🗄️ הגדרות מסד הנתונים
# ===========================================

# כתובת חיבור MongoDB
# עבור MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/
# עבור MongoDB מקומי: mongodb://localhost:27017/
MONGODB_URI=mongodb+srv://your_username:your_password@cluster0.mongodb.net/

# שם מסד הנתונים
DB_NAME=stock_tracker_bot

# ===========================================
# 🕷️ הגדרות סקרייפינג (בדיקת מלאי)
# ===========================================

# זמן קצוב לבקשות אינטרנט (שניות)
SCRAPER_TIMEOUT=30

# מספר מקסימלי של בקשות במקביל (כדי לא להעמיס על השרתים)
MAX_CONCURRENT_REQUESTS=10

# מחרוזת זיהוי הבוט לבקשות אינטרנט
USER_AGENT=StockTracker Bot/1.0 (https://your-bot.onrender.com)

# ===========================================
# ⏰ הגדרות תזמון ובדיקות
# ===========================================

# מרווח ברירת מחדל בין בדיקות מלאי (דקות)
DEFAULT_CHECK_INTERVAL=60

# מרווח מינימלי מותר לבדיקה (דקות) 
MIN_CHECK_INTERVAL=10

# מרווח מקסימלי מותר לבדיקה (דקות)
MAX_CHECK_INTERVAL=1440

# ===========================================
# 🛡️ הגבלת שימוש ואבטחה
# ===========================================

# מספר מקסימלי של בקשות למשתמש ליום
RATE_LIMIT_PER_USER=50

# חלון זמן להגבלת שימוש (שניות) - 86400 = 24 שעות
RATE_LIMIT_WINDOW=86400

# ===========================================
# 🌍 סביבת עבודה ופריסה
# ===========================================

# סביבה: development, staging, production
ENVIRONMENT=development

# הפעלת מצב דיבאג (true/false)
DEBUG=false

# רמת לוגים: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# גרסת פייתון (לפריסה)
PYTHON_VERSION=3.12

# ===========================================
# 📊 מעקב ואנליטיקה (אופציונלי)
# ===========================================

# Webhook של דיסקורד להודעות פריסה
DISCORD_WEBHOOK=https://discord.com/api/webhooks/your/webhook/url

# Sentry DSN למעקב שגיאות (אופציונלי)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# מזהה Google Analytics למעקב אתר (אופציונלי)
# GA_TRACKING_ID=GA-XXXXXXXXX-X

# ===========================================
# 🔐 שירותים חיצוניים (אופציונלי)
# ===========================================

# כתובת Redis לאחסון במטמון (אם משתמשים ב-Redis)
# REDIS_URL=redis://localhost:6379

# שרת API של טלגרם (אם משתמשים בשרת מותאם אישית)
# TELEGRAM_API_URL=https://api.telegram.org

# ===========================================
# 🏪 הגדרות ספציפיות למועדונים (מתקדם)
# ===========================================

# זמני קצוב מותאמים לכל חנות (אופציונלי)
# MASHKAR_TIMEOUT=45
# HOT_TIMEOUT=30
# CORPORATE_TIMEOUT=35

# User agents מותאמים לכל חנות (אופציונלי)
# MASHKAR_USER_AGENT=בוט מותאם למשקארד
# HOT_USER_AGENT=בוט מותאם להוט

# מפתחות API לחנויות שיש להן API (אם קיים)
# MASHKAR_API_KEY=your_mashkar_api_key
# CORPORATE_API_KEY=your_corporate_api_key

# ===========================================
# 🧪 הגדרות לבדיקות
# ===========================================

# מסד נתונים לבדיקות
TEST_DB_NAME=stock_tracker_test

# טוקן טלגרם לבדיקות אינטגרציה
# TEST_TELEGRAM_TOKEN=test_bot_token

# דמיית שירותים חיצוניים במהלך בדיקות
MOCK_EXTERNAL_SERVICES=true

# ===========================================
# 🐳 הגדרות Docker (אם משתמשים ב-Docker)
# ===========================================

# תג של Docker image
# DOCKER_IMAGE_TAG=latest

# מיפוי פורט Container
# CONTAINER_PORT=10000

# ===========================================
# ⚡ כוונון ביצועים (מתקדם)
# ===========================================

# הגדרות connection pool של מסד הנתונים
# DB_MIN_POOL_SIZE=2
# DB_MAX_POOL_SIZE=10

# Connection pool של HTTP client
# HTTP_POOL_CONNECTIONS=100
# HTTP_POOL_MAXSIZE=100

# מגבלות async worker
# MAX_WORKERS=4
# WORKER_TIMEOUT=300

# הגדרות דפדפן Playwright
# PLAYWRIGHT_HEADLESS=true
# PLAYWRIGHT_TIMEOUT=30000

# ===========================================
# 📱 TELEGRAM BOT ADVANCED SETTINGS
# ===========================================

# Bot description and commands
BOT_DESCRIPTION="Bot for tracking product availability in Israeli shopping clubs"
BOT_SHORT_DESCRIPTION="Track product availability"

# Webhook settings
# WEBHOOK_SECRET_TOKEN=your_webhook_secret
# WEBHOOK_MAX_CONNECTIONS=40
# WEBHOOK_ALLOWED_UPDATES=message,callback_query

# Bot API limits
# TELEGRAM_RATE_LIMIT_MESSAGES_PER_SECOND=30
# TELEGRAM_RATE_LIMIT_MESSAGES_PER_MINUTE=20

# ===========================================
# 🔍 DEBUGGING & DEVELOPMENT
# ===========================================

# Enable verbose logging for specific components
# DEBUG_DATABASE=false
# DEBUG_SCRAPER=false  
# DEBUG_SCHEDULER=false
# DEBUG_TELEGRAM=false

# Enable request/response logging
# LOG_HTTP_REQUESTS=false
# LOG_HTTP_RESPONSES=false

# Save scraped HTML for debugging
# SAVE_SCRAPED_HTML=false
# SCRAPED_HTML_DIR=./debug/html

# ===========================================
# 📧 EMAIL NOTIFICATIONS (Optional)
# ===========================================

# SMTP settings for email notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# SMTP_FROM_EMAIL=bot@your-domain.com

# ===========================================
# ☁️ CLOUD PROVIDER SETTINGS
# ===========================================

# Render.com specific
# RENDER_EXTERNAL_URL=https://your-app.onrender.com
# RENDER_INTERNAL_HOSTNAME=your-app
# RENDER_SERVICE_ID=srv-xxxxxxxxxxxxx

# AWS settings (if using AWS services)
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# AWS_DEFAULT_REGION=us-east-1

# Google Cloud settings (if using GCP)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
# GOOGLE_CLOUD_PROJECT=your-project-id

# ===========================================
# 🏥 HEALTH CHECK SETTINGS
# ===========================================

# Health check intervals
HEALTH_CHECK_INTERVAL=300  # 5 minutes

# Health check endpoints
HEALTH_CHECK_DATABASE=true
HEALTH_CHECK_TELEGRAM=true
HEALTH_CHECK_SCRAPER=true

# ===========================================
# 🎯 FEATURE FLAGS (Optional)
# ===========================================

# Enable/disable features
FEATURE_ANALYTICS=true
FEATURE_USER_STATS=true
FEATURE_ADMIN_COMMANDS=false
FEATURE_PREMIUM_FEATURES=false
FEATURE_MULTI_LANGUAGE=false

# Experimental features
EXPERIMENTAL_API_CACHING=false
EXPERIMENTAL_BATCH_PROCESSING=false
EXPERIMENTAL_MACHINE_LEARNING=false

# ===========================================
# 📝 הערות לפריסה
# ===========================================

# 1. לעולם אל תעלו את קובץ ה-.env האמיתי ל-Git
# 2. השתמשו בממשק של Render לקביעת ערכי הפרודקציה
# 3. עבור MongoDB, השתמשו ב-MongoDB Atlas (יש שכבה חינמית)
# 4. קבלו טוקן בוט מ-@BotFather בטלגרם
# 5. קבעו WEBHOOK_URL לכתובת האפליקציה שלכם ב-Render + /telegram-webhook
# 6. התחילו עם ערכי ברירת מחדל וכווננו ביצועים לפי השימוש
# 7. הפעילו מעקב ולוגים לפריסות פרודקציה

# ===========================================
# 🔗 קישורים שימושיים
# ===========================================

# Telegram Bot API: https://core.telegram.org/bots/api
# MongoDB Atlas: https://cloud.mongodb.com/
# תיעוד Render: https://render.com/docs
# GitHub Actions: https://docs.github.com/en/actions
# אבטחת משתני סביבה: https://render.com/docs/environment-variables

# ===========================================
# 🎯 מדריך הגדרה מהיר
# ===========================================

# שלב 1: צרו בוט בטלגרם
# - שלחו /newbot ל-@BotFather
# - שמרו את הטוקן שתקבלו

# שלב 2: הכינו MongoDB
# - צרו חשבון חינמי ב-MongoDB Atlas
# - יצרו Cluster חדש (M0 - חינמי)
# - הוסיפו משתמש עם הרשאות קריאה/כתיבה
# - קבלו את ה-Connection String

# שלב 3: פרסו ל-Render
# - עשו Fork לפרויקט הזה ב-GitHub
# - צרו Web Service ב-Render וחברו לRepository
# - הוסיפו את משתני הסביבה הנדרשים
# - הפרויקט יפרס אוטומטית!

# ===========================================
# ❓ עזרה ותמיכה
# ===========================================

# אם יש בעיות:
# 1. בדקו שהטוקן נכון עם: https://api.telegram.org/bot<YOUR_TOKEN>/getMe
# 2. בדקו חיבור MongoDB דרך MongoDB Compass
# 3. צפו בלוגים של Render לאיתור שגיאות
# 4. וודאו שהפורט 10000 מוגדר נכון

# תמיכה נוספת:
# GitHub Issues: https://github.com/your-username/stock-tracker-bot/issues
# אימייל: your-email@example.com
